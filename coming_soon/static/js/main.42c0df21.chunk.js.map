{"version":3,"sources":["App.js","index.js"],"names":["Model","url","useLoader","GLTFLoader","draco","nodes","materials","rotation","Math","PI","position","scale","castShadow","receiveShadow","geometry","planet001","material","scene","planet002","Loading","useState","finished","set","width","setWidth","useEffect","THREE","onLoad","onProgress","itemsLoaded","itemsTotal","useTransition","from","opacity","leave","update","map","item","key","props","div","className","style","App","shadowMap","camera","intensity","angle","penumbra","shadow-mapSize-width","shadow-mapSize-height","shadow-bias","attach","args","fallback","autoRotate","enablePan","enableZoom","enableDamping","dampingFactor","rotateSpeed","maxPolarAngle","minPolarAngle","href","children","ReactDOM","render","document","getElementById"],"mappings":"oPAOA,SAASA,EAAT,GAAyB,IAARC,EAAO,EAAPA,IAAO,EACOC,YAAUC,IAAYF,EAAKG,eAAhDC,EADc,EACdA,MAAOC,EADO,EACPA,UACf,OACE,2BACEC,SAAU,EAAEC,KAAKC,GAAK,EAAG,EAAG,GAC5BC,SAAU,CAAC,GAAI,EAAG,GAClBC,MAAO,CAAC,EAAG,EAAG,IAEd,2BAAOJ,SAAU,CAACC,KAAKC,GAAK,MAAOD,KAAKC,GAAK,IAAKD,KAAKC,GAAK,MAC1D,0BACEG,YAAU,EACVC,eAAa,EACbC,SAAUT,EAAMU,UAAUD,SAC1BE,SAAUV,EAAUW,QAEtB,0BACEL,YAAU,EACVC,eAAa,EACbC,SAAUT,EAAMa,UAAUJ,SAC1BE,SAAUV,EAAUW,UAO9B,SAASE,IAAW,IAAD,EACOC,oBAAS,GADhB,mBACVC,EADU,KACAC,EADA,OAESF,mBAAS,GAFlB,mBAEVG,EAFU,KAEHC,EAFG,KAgBjB,OAZAC,qBAAU,WACRC,wBAA4BC,OAAS,kBAAML,GAAI,IAC/CI,wBAA4BE,WAAa,SAAC3B,EAAK4B,EAAaC,GAAnB,OACvCN,EAAUK,EAAcC,EAAc,QACvC,IAEWC,YAAcV,EAAU,KAAM,CAC1CW,KAAM,CAAEC,QAAS,EAAGV,MAAO,GAC3BW,MAAO,CAAED,QAAS,GAClBE,OAAQ,CAAEZ,WAGCa,KACX,gBAASf,EAAT,EAAGgB,KAAgBC,EAAnB,EAAmBA,IAAnB,IAAwBC,MAASN,EAAjC,EAAiCA,QAASV,EAA1C,EAA0CA,MAA1C,OACGF,GACC,kBAAC,IAAEmB,IAAH,CAAOC,UAAU,UAAUH,IAAKA,EAAKI,MAAO,CAAET,YAC5C,yBAAKQ,UAAU,yBACb,kBAAC,IAAED,IAAH,CAAOC,UAAU,cAAcC,MAAO,CAAEnB,gBAOrC,SAASoB,IACtB,OACE,oCACE,yBAAKF,UAAU,OAEf,kBAAC,IAAD,CAAQG,WAAS,EAACC,OAAQ,CAAEnC,SAAU,CAAC,EAAG,EAAG,MAC3C,kCAAcoC,UAAW,MACzB,gCAAYA,UAAW,EAAGpC,SAAU,EAAE,IAAK,IAAK,MAChD,+BACEE,YAAU,EACVkC,UAAW,KACXC,MAAO,GACPC,SAAU,EACVtC,SAAU,CAAC,GAAI,GAAI,IACnBuC,uBAAsB,KACtBC,wBAAuB,KACvBC,eAAc,OAEhB,yBAAKC,OAAO,MAAMC,KAAM,CAAC,UAAW,GAAI,MACxC,kBAAC,WAAD,CAAUC,SAAU,MAClB,kBAACtD,EAAD,CAAOC,IAAI,uBAEb,kBAAC,IAAD,CACEsD,YAAU,EACVC,WAAW,EACXC,YAAY,EACZC,eAAa,EACbC,cAAe,GACfC,YAAa,EACbC,cAAerD,KAAKC,GAAK,EACzBqD,cAAetD,KAAKC,GAAK,KAG7B,oCAEE,6BACA,8CAEF,yBAAKgC,UAAU,UACf,kBAACtB,EAAD,MACA,uBACE4C,KAAK,qCACLtB,UAAU,WACVuB,SAAS,cAEX,uBACED,KAAK,6BACLtB,UAAU,YACVuB,SAAS,a,MCxGjBC,IAASC,OAAO,kBAACvB,EAAD,MAASwB,SAASC,eAAe,W","file":"static/js/main.42c0df21.chunk.js","sourcesContent":["import * as THREE from \"three\";\r\nimport React, { Suspense, useState, useEffect } from \"react\";\r\nimport { Canvas, useLoader } from \"react-three-fiber\";\r\nimport { useTransition, a } from \"react-spring\";\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\nimport { OrbitControls, draco } from \"drei\";\r\n\r\nfunction Model({ url }) {\r\n  const { nodes, materials } = useLoader(GLTFLoader, url, draco());\r\n  return (\r\n    <group\r\n      rotation={[-Math.PI / 2, 0, 0]}\r\n      position={[0, -7, 0]}\r\n      scale={[7, 7, 7]}\r\n    >\r\n      <group rotation={[Math.PI / 13.5, -Math.PI / 5.8, Math.PI / 5.6]}>\r\n        <mesh\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.planet001.geometry}\r\n          material={materials.scene}\r\n        />\r\n        <mesh\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.planet002.geometry}\r\n          material={materials.scene}\r\n        />\r\n      </group>\r\n    </group>\r\n  );\r\n}\r\n\r\nfunction Loading() {\r\n  const [finished, set] = useState(false);\r\n  const [width, setWidth] = useState(0);\r\n\r\n  useEffect(() => {\r\n    THREE.DefaultLoadingManager.onLoad = () => set(true);\r\n    THREE.DefaultLoadingManager.onProgress = (url, itemsLoaded, itemsTotal) =>\r\n      setWidth((itemsLoaded / itemsTotal) * 200);\r\n  }, []);\r\n\r\n  const props = useTransition(finished, null, {\r\n    from: { opacity: 1, width: 0 },\r\n    leave: { opacity: 0 },\r\n    update: { width },\r\n  });\r\n\r\n  return props.map(\r\n    ({ item: finished, key, props: { opacity, width } }) =>\r\n      !finished && (\r\n        <a.div className=\"loading\" key={key} style={{ opacity }}>\r\n          <div className=\"loading-bar-container\">\r\n            <a.div className=\"loading-bar\" style={{ width }} />\r\n          </div>\r\n        </a.div>\r\n      )\r\n  );\r\n}\r\n\r\nexport default function App() {\r\n  return (\r\n    <>\r\n      <div className=\"bg\" />\r\n\r\n      <Canvas shadowMap camera={{ position: [0, 0, 15] }}>\r\n        <ambientLight intensity={0.75} />\r\n        <pointLight intensity={1} position={[-10, -25, -10]} />\r\n        <spotLight\r\n          castShadow\r\n          intensity={2.25}\r\n          angle={0.2}\r\n          penumbra={1}\r\n          position={[25, 25, 25]}\r\n          shadow-mapSize-width={1024}\r\n          shadow-mapSize-height={1024}\r\n          shadow-bias={-0.0001}\r\n        />\r\n        <fog attach=\"fog\" args={[\"#cc7b32\", 16, 20]} />\r\n        <Suspense fallback={null}>\r\n          <Model url=\"/scene-draco.gltf\" />\r\n        </Suspense>\r\n        <OrbitControls\r\n          autoRotate\r\n          enablePan={false}\r\n          enableZoom={false}\r\n          enableDamping\r\n          dampingFactor={0.5}\r\n          rotateSpeed={1}\r\n          maxPolarAngle={Math.PI / 2}\r\n          minPolarAngle={Math.PI / 2}\r\n        />\r\n      </Canvas>\r\n      <h1>\r\n        VEXIO\r\n        <br />\r\n        <span>Coming Soon</span>\r\n      </h1>\r\n      <div className=\"layer\" />\r\n      <Loading />\r\n      <a\r\n        href=\"https://www.instagram.com/vexio.in\"\r\n        className=\"top-left\"\r\n        children=\"Instagram\"\r\n      />\r\n      <a\r\n        href=\"https://twitter.com/vexio8\"\r\n        className=\"top-right\"\r\n        children=\"Twitter\"\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './styles.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}